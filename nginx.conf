
upstream backend_roundrobin {
  server app1:3002;
  server app2:3002;
  server app3:3002;
}

upstream backend_leastconn {
  least_conn;
  server app1:3002;
  server app2:3002;
  server app3:3002;
}

upstream backend_hash {
  hash $http_session_id consistent;
  server app1:3002;
  server app2:3002;
  server app3:3002;
}

upstream backend {
  server app1:3002;
  server app2:3002;
  server app3:3002;
}



log_format upstream_time '$remote_addr - - $time_local "$request" ($upstream_addr) "$http_user_agent" "$status"';

server {
  listen 80;
  listen  [::]:80;
  server_name  localhost;

  location / {
    proxy_pass http://frontend:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /api_roundrobin {
    rewrite ^/api_roundrobin/(.*)$ /$1 break;
    proxy_pass http://backend_roundrobin;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    access_log /var/log/nginx/access.log  upstream_time;
  }

  location /api_leastconn {
    rewrite ^/api_leastconn/(.*)$ /$1 break;
    proxy_pass http://backend_leastconn;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    access_log /var/log/nginx/access.log  upstream_time;
  }

  location /api_hash {
    rewrite ^/api_hash/(.*)$ /$1 break;
    proxy_pass http://backend_hash;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    access_log /var/log/nginx/access.log  upstream_time;
  }

  location /api {
    rewrite ^/api/(.*)$ /$1 break;
    proxy_pass http://backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    access_log /var/log/nginx/access.log  upstream_time;
  }
  

  location /socket.io/ {
    proxy_pass http://backend/socket.io/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
